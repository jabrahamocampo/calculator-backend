name: Backend CI (api-gateway + auth-service + balance-service + operation-service)

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

concurrency:
  group: backend-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  service-ci:
    name: ${{ matrix.service }} - Install → Lint → Test → Build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        service: [ "api-gateway", "auth-service", "balance-service", "operation-service" ] # agregado operation-service

    defaults:
      run:
        working-directory: ./${{ matrix.service }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./${{ matrix.service }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint (if script exists)
        run: |
          if npm run | grep -q "lint"; then
            npm run lint
          else
            echo "No lint script found in ${{ matrix.service }}, skipping."
          fi

      - name: Set environment variables for tests
        run: |
          # Variables comunes para todos los microservicios
          echo "PORT=4000" >> $GITHUB_ENV
          echo "JWT_SECRET=ci_secret" >> $GITHUB_ENV

          # Variables específicas por microservicio
          if [[ "${{ matrix.service }}" == "auth-service" ]]; then
            echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/auth_test_db" >> $GITHUB_ENV
          fi

          if [[ "${{ matrix.service }}" == "api-gateway" ]]; then
            echo "API_GATEWAY_PORT=4005" >> $GITHUB_ENV
          fi

          if [[ "${{ matrix.service }}" == "balance-service" ]]; then
            echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/balance_test_db" >> $GITHUB_ENV
          fi

          if [[ "${{ matrix.service }}" == "operation-service" ]]; then
            echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/operation_test_db" >> $GITHUB_ENV
          fi

          # Aquí se pueden agregar más microservicios y sus variables

      - name: Run tests with coverage
        run: |
          if npm run | grep -q "test:ci"; then
            npm run test:ci
          else
            npx jest --coverage --runInBand
          fi
        env:
          NODE_ENV: test

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.service }}
          path: ./${{ matrix.service }}/coverage

      - name: Build (if script exists)
        run: |
          if npm run | grep -q "build"; then
            npm run build
          else
            echo "No build script in ${{ matrix.service }}, skipping."
          fi
