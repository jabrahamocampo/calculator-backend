name: Backend CI (microservices)

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

concurrency:
  group: backend-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  service-ci:
    name: ${{ matrix.service }} - Install → Lint → Test → Build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        service: [ "auth-service", "balance-service", "operation-service", "record-service", "api-gateway" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-deps-

      - name: Install dependencies
        run: npm ci
        working-directory: ./backend/${{ matrix.service }}

      - name: Lint (if script exists)
        run: |
          if (cat package.json | jq -e '.scripts.lint' > /dev/null 2>&1); then
            npm run lint
          else
            echo "No lint script found in ${{ matrix.service }}, skipping."
          fi
        working-directory: ./backend/${{ matrix.service }}

      - name: Run tests with coverage
        run: |
          if (cat package.json | jq -e '.scripts["test:ci"]' > /dev/null 2>&1); then
            npm run test:ci
          else
            # fallback to jest with coverage
            npx jest --coverage --runInBand
          fi
        env:
          NODE_ENV: test
          # Add any test env vars here (point to secrets if needed)
          # DB_URL: ${{ secrets.TEST_DB_URL }}
        working-directory: ./backend/${{ matrix.service }}

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.service }}
          path: ./backend/${{ matrix.service }}/coverage || ./backend/${{ matrix.service }}/coverage/

      - name: Build (if script exists)
        run: |
          if (cat package.json | jq -e '.scripts.build' > /dev/null 2>&1); then
            npm run build
          else
            echo "No build script in ${{ matrix.service }}, skipping."
          fi
        working-directory: ./backend/${{ matrix.service }}
